{"ast":null,"code":"var _jsxFileName = \"/Users/viharieyunni/Desktop/react-advanced-2020/src/tutorial/3-conditional-rendering/setup/1-multiple-returns.js\";\nimport React, { useState, useEffect } from 'react';\nconst url = 'https://api.github.com/users/QuincyLarson';\n\nconst MultipleReturns = () => {\n  const [isloading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const [user, setUser] = useState('default user');\n  useEffect(() => {\n    fetch(url).then(resp => {\n      if (resp.status >= 200 && resp.status <= 299) {\n        resp.json();\n      } else {\n        setIsLoading(false);\n        setIsError(true);\n        throw new Error(resp.statusText);\n      }\n    }).then(user => {\n      const {\n        id\n      } = user;\n      setUser(id);\n      setIsLoading(false);\n    }).catch(error => console.log(error));\n  }, []);\n\n  if (isloading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"Loading...\"));\n  }\n\n  if (isError) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Error...\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, user));\n};\n\nexport default MultipleReturns;","map":{"version":3,"sources":["/Users/viharieyunni/Desktop/react-advanced-2020/src/tutorial/3-conditional-rendering/setup/1-multiple-returns.js"],"names":["React","useState","useEffect","url","MultipleReturns","isloading","setIsLoading","isError","setIsError","user","setUser","fetch","then","resp","status","json","Error","statusText","id","catch","error","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,MAAMC,GAAG,GAAG,2CAAZ;;AACA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,cAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAACR,GAAD,CAAL,CACGS,IADH,CACSC,IAAD,IAAU;AACd,UAAIA,IAAI,CAACC,MAAL,IAAe,GAAf,IAAsBD,IAAI,CAACC,MAAL,IAAe,GAAzC,EAA8C;AAC5CD,QAAAA,IAAI,CAACE,IAAL;AACD,OAFD,MAEO;AACLT,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAM,IAAIQ,KAAJ,CAAUH,IAAI,CAACI,UAAf,CAAN;AACD;AACF,KATH,EAUGL,IAVH,CAUSH,IAAD,IAAU;AACd,YAAM;AAAES,QAAAA;AAAF,UAAST,IAAf;AACAC,MAAAA,OAAO,CAACQ,EAAD,CAAP;AACAZ,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAdH,EAeGa,KAfH,CAeUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAfpB;AAgBD,GAjBQ,EAiBN,EAjBM,CAAT;;AAmBA,MAAIf,SAAJ,EAAe;AACb,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD;;AACD,MAAIE,OAAJ,EAAa;AACX,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAKD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,IAAL,CADF,CADF;AAKD,CA3CD;;AA6CA,eAAeL,eAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nconst url = 'https://api.github.com/users/QuincyLarson'\nconst MultipleReturns = () => {\n  const [isloading, setIsLoading] = useState(true)\n  const [isError, setIsError] = useState(false)\n  const [user, setUser] = useState('default user')\n\n  useEffect(() => {\n    fetch(url)\n      .then((resp) => {\n        if (resp.status >= 200 && resp.status <= 299) {\n          resp.json()\n        } else {\n          setIsLoading(false)\n          setIsError(true)\n          throw new Error(resp.statusText)\n        }\n      })\n      .then((user) => {\n        const { id } = user\n        setUser(id)\n        setIsLoading(false)\n      })\n      .catch((error) => console.log(error))\n  }, [])\n\n  if (isloading) {\n    return (\n      <div>\n        <h2>Loading...</h2>\n      </div>\n    )\n  }\n  if (isError) {\n    return (\n      <div>\n        <h1>Error...</h1>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <h2>{user}</h2>\n    </div>\n  )\n}\n\nexport default MultipleReturns\n"]},"metadata":{},"sourceType":"module"}