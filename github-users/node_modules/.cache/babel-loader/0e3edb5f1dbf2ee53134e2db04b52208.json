{"ast":null,"code":"var _jsxFileName = \"/Users/viharieyunni/Desktop/react-advanced-2020/src/tutorial/2-useEffect/setup/2-useEffect-cleanup.js\";\nimport React, { useState, useEffect } from 'react'; // cleanup function\n// second argument\n\nconst UseEffectCleanup = () => {\n  const [size, setSize] = useState(window.innerWidth);\n\n  const checkSize = () => {\n    setSize(window.innerWidth);\n  };\n\n  useEffect(() => {\n    console.log('useEffect');\n    window.addEventListener('resize', checkSize);\n  });\n  console.log(size);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, \"Window width\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, size, \" PX\"));\n};\n\nexport default UseEffectCleanup;","map":{"version":3,"sources":["/Users/viharieyunni/Desktop/react-advanced-2020/src/tutorial/2-useEffect/setup/2-useEffect-cleanup.js"],"names":["React","useState","useEffect","UseEffectCleanup","size","setSize","window","innerWidth","checkSize","console","log","addEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CAEA;AACA;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACK,MAAM,CAACC,UAAR,CAAhC;;AACA,QAAMC,SAAS,GAAG,MAAM;AACtBH,IAAAA,OAAO,CAACC,MAAM,CAACC,UAAR,CAAP;AACD,GAFD;;AAGAL,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAJ,IAAAA,MAAM,CAACK,gBAAP,CAAwB,QAAxB,EAAkCH,SAAlC;AACD,GAHQ,CAAT;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAJ,QAFF,CADF;AAMD,CAhBD;;AAkBA,eAAeD,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n// cleanup function\n// second argument\n\nconst UseEffectCleanup = () => {\n  const [size, setSize] = useState(window.innerWidth)\n  const checkSize = () => {\n    setSize(window.innerWidth)\n  }\n  useEffect(() => {\n    console.log('useEffect')\n    window.addEventListener('resize', checkSize)\n  })\n  console.log(size)\n  return (\n    <>\n      <h1>Window width</h1>\n      <p>{size} PX</p>\n    </>\n  )\n}\n\nexport default UseEffectCleanup\n"]},"metadata":{},"sourceType":"module"}